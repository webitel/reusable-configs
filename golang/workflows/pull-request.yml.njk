name: PR (((( name ))))
run-name: "((( name )))@pr${{ github.event.pull_request.number }}#${{ github.run_number }} - ${{ github.event.pull_request.title }}"

on:
  pull_request:

permissions: { contents: read }
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  prepare:
    name: Prepare
    uses: webitel/reusable-workflows/.github/workflows/golang-prepare.yml@((( version )))
    with:
      development-branch: ${{ github.event.repository.default_branch }}
      triggered-branch: ${{ github.event.pull_request.base.ref }}

  checks:
    name: Checks
    needs: [ prepare ]
    uses: webitel/reusable-workflows/.github/workflows/golang-checks.yml@((( version )))
    permissions:
      contents: read
      actions: read
      security-events: write

  compile:
    name: Build
    needs: [ prepare ]
    uses: webitel/reusable-workflows/.github/workflows/golang-build.yml@((( version )))
    with:
      binary-name: ((( build["binary-name"] )))
      ldflags: >
        ((( build["ldflags"] | safe | indent(8) )))

      version: ${{ needs.prepare.outputs.version }}
      version-build: ${{ github.run_number }}
      version-metadata: pr${{ github.event.pull_request.number }}
      prerelease: dev
      package-name: ${{ vars.SERVICE_NAME }}
      package-description: ${{ github.event.repository.description }}
      package-contents: |
        ((( build["package-contents"] | safe | indent(8) )))

      scripts: |
        ((( build["scripts"] | safe | indent(8) )))

  publish:
    name: Publish .deb package
    needs: [ prepare, compile ]
    uses: webitel/reusable-workflows/.github/workflows/_publish-deb.yml@((( version )))
    secrets:
      DEB_AWS_ACCESS_KEY_ID: ${{ secrets.DEB_AWS_ACCESS_KEY_ID }}
      DEB_AWS_SECRET_ACCESS_KEY: ${{ secrets.DEB_AWS_SECRET_ACCESS_KEY }}
      REPO_SIGNING_KEY: ${{ secrets.REPO_SIGNING_KEY }}" }}
      REPO_SIGNING_KEY_PASSPHRASE: ${{ secrets.REPO_SIGNING_KEY_PASSPHRASE }}

    with:
      deb-package-pattern: "((( name )))*.deb"
      deb-component: dev
      deb-codename: ${{ vars.DEB_CODENAME }}
      deb-aws-bucket-name: ${{ vars.DEB_AWS_BUCKET_NAME }}
      deb-aws-bucket-region: ${{ vars.DEB_AWS_DEFAULT_REGION }}


